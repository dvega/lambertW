/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lambert;

import org.junit.Test;
import static org.junit.Assert.*;

public class LambertTest {
    @Test public void lambertW0() {
        double w = -1;

        while (true) {
            double z = w * Math.exp(w);
            double w2 = Lambert.lambertW0(z);
            double z2 = w * Math.exp(w);
            if (Double.isInfinite(w2)) break;
            System.out.printf("w=%g w2=%g z=%g z2=%g dw=%g dz=%g%n", w, w2, z, z2, (w2-w)/w, (z2-z)/z);
            assertEquals("w=" + w + ", w2=" + w2, z, z2, Math.ulp(w)*8);
            w = (w == -1) ? Math.nextUp(w) : 2*(w + 1) - 1;
        }

    }

    @Test public void lambertWm1() {
        double w = -1;

        while (true) {
            double z = w * Math.exp(w);
            double w2 = Lambert.lambertWm1(z);
            double z2 = w * Math.exp(w);
            if (Double.isInfinite(w2)) break;
            System.out.printf("w=%g w2=%g z=%g z2=%g dw=%g dz=%g%n", w, w2, z, z2, (w2-w)/w, (z2-z)/z);
            assertEquals("w=" + w + ", w2=" + w2, z, z2, Math.ulp(w)*8);
            w = (w == -1) ? Math.nextDown(w) : 1+2*w;
        }
    }
}
